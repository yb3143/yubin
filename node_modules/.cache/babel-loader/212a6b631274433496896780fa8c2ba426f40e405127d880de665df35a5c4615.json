{"ast":null,"code":"var _jsxFileName = \"/Users/yubin/Desktop/\\u110B\\u1171\\u110F\\u1173\\u11AF\\u1105\\u1175 \\u1100\\u116A\\u110C\\u1166/9\\u110C\\u116E\\u110E\\u1161/src/sharing/ui-icon-and-text-button/IconAndTextButton.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./IconAndTextButton.module.scss\";\nimport classNames from \"classnames/bind\";\nimport ToolBarModal from \"./ToolBarModal\";\nimport { ModalContent } from \"./ModalContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\n// Modal 컴포넌트 true =>실행\nexport const IconAndTextButton = ({\n  iconSource,\n  text,\n  children\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cx(\"container\"),\n      onClick: () => setShowModal(true),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: cx(\"icon\"),\n        src: iconSource,\n        alt: `${text} 아이콘`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cx(\"text\"),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ToolBarModal, {\n      onClose: () => setShowModal(false),\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n// // 삭제하기 버튼이 있는 곳\n// {\n//   /* <Modal showModal=\"true\">삭제하기</Modal>  */\n// }\n_s(IconAndTextButton, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = IconAndTextButton;\nvar _c;\n$RefreshReg$(_c, \"IconAndTextButton\");","map":{"version":3,"names":["useState","styles","classNames","ToolBarModal","ModalContent","jsxDEV","_jsxDEV","Fragment","_Fragment","cx","bind","IconAndTextButton","iconSource","text","children","_s","showModal","setShowModal","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/Users/yubin/Desktop/위클리 과제/9주차/src/sharing/ui-icon-and-text-button/IconAndTextButton.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styles from \"./IconAndTextButton.module.scss\";\nimport classNames from \"classnames/bind\";\nimport ToolBarModal from \"./ToolBarModal\";\nimport { ModalContent } from \"./ModalContent\";\n\nconst cx = classNames.bind(styles);\n// Modal 컴포넌트 true =>실행\nexport const IconAndTextButton = ({ iconSource, text, children }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <button className={cx(\"container\")} onClick={() => setShowModal(true)}>\n        <img className={cx(\"icon\")} src={iconSource} alt={`${text} 아이콘`} />\n        <span className={cx(\"text\")}>{text}</span>\n      </button>\n      {showModal && (\n        <ToolBarModal onClose={() => setShowModal(false)}>\n          <ModalContent>{children}</ModalContent>\n        </ToolBarModal>\n      )}\n    </>\n  );\n};\n// // 삭제하기 버튼이 있는 곳\n// {\n//   /* <Modal showModal=\"true\">삭제하기</Modal>  */\n// }\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,iCAAiC;AACpD,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,EAAE,GAAGP,UAAU,CAACQ,IAAI,CAACT,MAAM,CAAC;AAClC;AACA,OAAO,MAAMU,iBAAiB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEM,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAQY,SAAS,EAAET,EAAE,CAAC,WAAW,CAAE;MAACU,OAAO,EAAEA,CAAA,KAAMF,YAAY,CAAC,IAAI,CAAE;MAAAH,QAAA,gBACpER,OAAA;QAAKY,SAAS,EAAET,EAAE,CAAC,MAAM,CAAE;QAACW,GAAG,EAAER,UAAW;QAACS,GAAG,EAAG,GAAER,IAAK;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEnB,OAAA;QAAMY,SAAS,EAAET,EAAE,CAAC,MAAM,CAAE;QAAAK,QAAA,EAAED;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACRT,SAAS,iBACRV,OAAA,CAACH,YAAY;MAACuB,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,KAAK,CAAE;MAAAH,QAAA,eAC/CR,OAAA,CAACF,YAAY;QAAAU,QAAA,EAAEA;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACf;EAAA,eACD,CAAC;AAEP,CAAC;AACD;AACA;AACA;AACA;AAAAV,EAAA,CApBaJ,iBAAiB;AAAAgB,EAAA,GAAjBhB,iBAAiB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}