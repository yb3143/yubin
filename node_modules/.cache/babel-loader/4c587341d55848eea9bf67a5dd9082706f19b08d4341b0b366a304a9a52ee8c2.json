{"ast":null,"code":"import { TIME_IN_MILLISECONDS } from \"./constant\";\nexport const getElapsedTime = createdAt => {\n  const now = new Date();\n  const createdAtDate = new Date(createdAt);\n  const elapsedTime = now - createdAtDate;\n  const {\n    minute,\n    hour,\n    day,\n    month,\n    year\n  } = TIME_IN_MILLISECONDS;\n  if (year * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / year)} years ago`;\n  }\n  if (year <= elapsedTime) {\n    return `1 year ago`;\n  }\n  if (month * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / month)} months ago`;\n  }\n  if (month <= elapsedTime) {\n    return `1 month ago`;\n  }\n  if (day * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / day)} days ago`;\n  }\n  if (day <= elapsedTime) {\n    return `1 day ago`;\n  }\n  if (hour * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / hour)} hours ago`;\n  }\n  if (hour <= elapsedTime) {\n    return `1 hour ago`;\n  }\n  if (minute * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / minute)} minutes ago`;\n  }\n  return `1 minute ago`;\n};","map":{"version":3,"names":["TIME_IN_MILLISECONDS","getElapsedTime","createdAt","now","Date","createdAtDate","elapsedTime","minute","hour","day","month","year","Math","floor"],"sources":["/Users/yubin/Downloads/9주차/src/sharing/util/getElapsedTime.js"],"sourcesContent":["import { TIME_IN_MILLISECONDS } from \"./constant\";\n\nexport const getElapsedTime = (createdAt) => {\n  const now = new Date();\n  const createdAtDate = new Date(createdAt);\n  const elapsedTime = now - createdAtDate;\n  const { minute, hour, day, month, year } = TIME_IN_MILLISECONDS;\n\n  if (year * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / year)} years ago`;\n  }\n  if (year <= elapsedTime) {\n    return `1 year ago`;\n  }\n  if (month * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / month)} months ago`;\n  }\n  if (month <= elapsedTime) {\n    return `1 month ago`;\n  }\n  if (day * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / day)} days ago`;\n  }\n  if (day <= elapsedTime) {\n    return `1 day ago`;\n  }\n  if (hour * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / hour)} hours ago`;\n  }\n  if (hour <= elapsedTime) {\n    return `1 hour ago`;\n  }\n  if (minute * 2 <= elapsedTime) {\n    return `${Math.floor(elapsedTime / minute)} minutes ago`;\n  }\n  return `1 minute ago`;\n};\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,YAAY;AAEjD,OAAO,MAAMC,cAAc,GAAIC,SAAS,IAAK;EAC3C,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,aAAa,GAAG,IAAID,IAAI,CAACF,SAAS,CAAC;EACzC,MAAMI,WAAW,GAAGH,GAAG,GAAGE,aAAa;EACvC,MAAM;IAAEE,MAAM;IAAEC,IAAI;IAAEC,GAAG;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,oBAAoB;EAE/D,IAAIW,IAAI,GAAG,CAAC,IAAIL,WAAW,EAAE;IAC3B,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACP,WAAW,GAAGK,IAAI,CAAE,YAAW;EACtD;EACA,IAAIA,IAAI,IAAIL,WAAW,EAAE;IACvB,OAAQ,YAAW;EACrB;EACA,IAAII,KAAK,GAAG,CAAC,IAAIJ,WAAW,EAAE;IAC5B,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACP,WAAW,GAAGI,KAAK,CAAE,aAAY;EACxD;EACA,IAAIA,KAAK,IAAIJ,WAAW,EAAE;IACxB,OAAQ,aAAY;EACtB;EACA,IAAIG,GAAG,GAAG,CAAC,IAAIH,WAAW,EAAE;IAC1B,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACP,WAAW,GAAGG,GAAG,CAAE,WAAU;EACpD;EACA,IAAIA,GAAG,IAAIH,WAAW,EAAE;IACtB,OAAQ,WAAU;EACpB;EACA,IAAIE,IAAI,GAAG,CAAC,IAAIF,WAAW,EAAE;IAC3B,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACP,WAAW,GAAGE,IAAI,CAAE,YAAW;EACtD;EACA,IAAIA,IAAI,IAAIF,WAAW,EAAE;IACvB,OAAQ,YAAW;EACrB;EACA,IAAIC,MAAM,GAAG,CAAC,IAAID,WAAW,EAAE;IAC7B,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACP,WAAW,GAAGC,MAAM,CAAE,cAAa;EAC1D;EACA,OAAQ,cAAa;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}