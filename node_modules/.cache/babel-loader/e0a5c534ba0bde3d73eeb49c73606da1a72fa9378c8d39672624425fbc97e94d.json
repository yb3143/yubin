{"ast":null,"code":"var _jsxFileName = \"/Users/yubin/Desktop/weekly/part2/4-Weekly-Mission/src/folder/feature-folder-tool-bar/FolderToolBar.jsx\";\nimport styles from \"./FolderToolBar.module.scss\";\nimport classNames from \"classnames/bind\";\nimport { AddFolderButton } from \"folder/ui-add-folder-button\";\nimport { FolderButton } from \"folder/ui-folder-button\";\nimport { IconAndTextButton } from \"sharing/ui-icon-and-text-button\";\nimport { ALL_LINKS_TEXT, BUTTONS } from \"./constant\";\nimport { ALL_LINKS_ID } from \"link/data-access-link/constant\";\nimport ToolBarModal from \"./ToolBarModal\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nexport const FolderToolBar = ({\n  folders,\n  selectedFolderId,\n  onFolderClick\n}) => {\n  var _folders$find;\n  const folderName = ALL_LINKS_ID === selectedFolderId ? ALL_LINKS_TEXT : folders === null || folders === void 0 ? void 0 : (_folders$find = folders.find(({\n    id\n  }) => id === selectedFolderId)) === null || _folders$find === void 0 ? void 0 : _folders$find.name;\n\n  // const [showModal, setShowModal] = useState(false);\n\n  // const handleOpenModal = () => {\n  //   setShowModal(true);\n  // };\n\n  // const handleCloseModal = () => {\n  //   setShowModal(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(\"container\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"folders\"),\n      children: [/*#__PURE__*/_jsxDEV(FolderButton, {\n        text: ALL_LINKS_TEXT,\n        onClick: () => onFolderClick(ALL_LINKS_ID),\n        isSelected: ALL_LINKS_ID === selectedFolderId\n      }, ALL_LINKS_ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), folders === null || folders === void 0 ? void 0 : folders.map(({\n        id,\n        name\n      }) => /*#__PURE__*/_jsxDEV(FolderButton, {\n        text: name,\n        onClick: () => onFolderClick(id),\n        isSelected: id === selectedFolderId\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"add-button\"),\n      children: /*#__PURE__*/_jsxDEV(AddFolderButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: cx(\"folder-name\"),\n      children: folderName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedFolderId !== ALL_LINKS_ID && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(\"buttons\"),\n      children: [BUTTONS.map(buttonData => /*#__PURE__*/_jsxDEV(IconAndTextButton, {\n        onClick: handleOpenModal,\n        ...buttonData\n      }, buttonData.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)), showModal && /*#__PURE__*/_jsxDEV(ToolBarModal, {\n        onClose: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = FolderToolBar;\nvar _c;\n$RefreshReg$(_c, \"FolderToolBar\");","map":{"version":3,"names":["styles","classNames","AddFolderButton","FolderButton","IconAndTextButton","ALL_LINKS_TEXT","BUTTONS","ALL_LINKS_ID","ToolBarModal","useState","jsxDEV","_jsxDEV","cx","bind","FolderToolBar","folders","selectedFolderId","onFolderClick","_folders$find","folderName","find","id","name","className","children","text","onClick","isSelected","fileName","_jsxFileName","lineNumber","columnNumber","map","buttonData","handleOpenModal","showModal","onClose","handleCloseModal","_c","$RefreshReg$"],"sources":["/Users/yubin/Desktop/weekly/part2/4-Weekly-Mission/src/folder/feature-folder-tool-bar/FolderToolBar.jsx"],"sourcesContent":["import styles from \"./FolderToolBar.module.scss\";\nimport classNames from \"classnames/bind\";\nimport { AddFolderButton } from \"folder/ui-add-folder-button\";\nimport { FolderButton } from \"folder/ui-folder-button\";\nimport { IconAndTextButton } from \"sharing/ui-icon-and-text-button\";\nimport { ALL_LINKS_TEXT, BUTTONS } from \"./constant\";\nimport { ALL_LINKS_ID } from \"link/data-access-link/constant\";\nimport ToolBarModal from \"./ToolBarModal\";\nimport { useState } from \"react\";\n\nconst cx = classNames.bind(styles);\n\nexport const FolderToolBar = ({ folders, selectedFolderId, onFolderClick }) => {\n  const folderName =\n    ALL_LINKS_ID === selectedFolderId\n      ? ALL_LINKS_TEXT\n      : folders?.find(({ id }) => id === selectedFolderId)?.name;\n\n  // const [showModal, setShowModal] = useState(false);\n\n  // const handleOpenModal = () => {\n  //   setShowModal(true);\n  // };\n\n  // const handleCloseModal = () => {\n  //   setShowModal(false);\n  // };\n\n  return (\n    <div className={cx(\"container\")}>\n      <div className={cx(\"folders\")}>\n        <FolderButton\n          key={ALL_LINKS_ID}\n          text={ALL_LINKS_TEXT}\n          onClick={() => onFolderClick(ALL_LINKS_ID)}\n          isSelected={ALL_LINKS_ID === selectedFolderId}\n        />\n        {folders?.map(({ id, name }) => (\n          <FolderButton\n            key={id}\n            text={name}\n            onClick={() => onFolderClick(id)}\n            isSelected={id === selectedFolderId}\n          />\n        ))}\n      </div>\n      <div className={cx(\"add-button\")}>\n        <AddFolderButton />\n      </div>\n      <h2 className={cx(\"folder-name\")}>{folderName}</h2>\n      {selectedFolderId !== ALL_LINKS_ID && (\n        <div className={cx(\"buttons\")}>\n          {BUTTONS.map((buttonData) => (\n            <IconAndTextButton\n              onClick={handleOpenModal}\n              key={buttonData.text}\n              {...buttonData}\n            />\n          ))}\n          {showModal && <ToolBarModal onClose={handleCloseModal} />}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}